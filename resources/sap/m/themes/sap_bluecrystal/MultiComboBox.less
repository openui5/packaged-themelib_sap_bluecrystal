/* ============================================================= */
/* CSS for control sap.m/MultiComboBox.control BlueCrystal theme */
/* ============================================================= */

.sapMMultiComboBoxItem {
	border: none;
}

/* ------------------------------ */
/* BorderDiv                      */
/* ------------------------------ */

.sapMMultiComboBoxBorder {
	background: @sapUiFieldBackground;
}

.sapMInputBaseReadonly > .sapMMultiComboBoxBorder {
	background-color: transparent;
}

/* ------------------------------ */
/* InputDiv and ShadowDiv         */
/* ------------------------------ */

.sapMMultiComboBoxInputContainer > input,
.sapMMultiComboBoxInputContainer > div {
	background: transparent;
}

/* Keep placeholder invisible, when at least one token is chosen */

/* Webkit */
.sapMMultiComboBoxHasToken .sapMMultiComboBoxInputInner::-webkit-input-placeholder {
	color: transparent;
}

/* Firefox 19+ */
.sapMMultiComboBoxHasToken .sapMMultiComboBoxInputInner::-moz-placeholder {
	color: transparent;
}

/* IE */
.sapMMultiComboBoxHasToken .sapMMultiComboBoxInputInner:-ms-input-placeholder {
	color: transparent;
}

/* Keep placeholder invisible, when at least one token is chosen. IE solution */
.sapMMultiComboBoxHasToken > .sapMInputBasePlaceholder {
	color: transparent;
	max-width: 0;
}

/* If a non-native placeholder is used, make sure that it is in front of children elements. */
.sapMMultiComboBox > .sapMInputBasePlaceholder {
	z-index: 1;
}

/* If a non-native placeholder is used, make sure that arrow button is in front of placeholder. */
.sapMMultiComboBox .sapMComboBoxBaseArrow {
	z-index: 2;
}


/* focus to allow go down via keyboard navigation into list */
html.sap-desktop .sapMMultiComboBoxList .sapMComboBoxBaseItem:focus {
	outline: 1px dotted @sapUiFocus;
}

.sapMMultiComboBoxPicker .sapMSLITitleOnly {
	font-size: 0.875rem;
}

html.sap-desktop li.sapMMultiComboBoxItemRangeSelection {
	background-color: @sapUiLightestBGHover;
}